#!/usr/bin/env python
# -*- coding: utf-8 -*-

import os, subprocess, sys, signal, uuid
import cfgparse
from infrasim import vm

VM_DEFAULT_CONFIG = "/etc/infrasim/infrasim.conf"

def vm_start(node):
    if vm.check_vm_status(node) is True:
        print "InfraSIM-VM serivce is running"
        return

    v = vm.VM()
    v.read_from_config()

    vm.start_vm(v.render_vm_template())
    print "InfraSIM-VM service start!"

def vm_stop(node):
    if vm.check_vm_status(node) is False:
        print "InfraSIM-VM service is stopped!"
        return

    vm.stop_vm(node)
    print "InfraSIM-VM service stopped!"

def vm_status(node):
    status = vm.status_vm(node)
    if status is True:
        print "InfraSIM-VM service is running!"
    else:
        print "InfraSIM-VM service is stopped!"

def vm_restart(node):
    vm_stop(node)
    vm_start(node)

def vm_help():
    print "inframsim_vm start|stop|status"

if __name__ == '__main__':
    config = cfgparse.ConfigParser()
    config.add_file(VM_DEFAULT_CONFIG, type = 'ini')
    config.add_option('node', keys = 'main')
    opts = config.parse()
    print opts.node
    if sys.argv[1] == "start":
        vm_start(opts.node)
    elif sys.argv[1] == "stop":
        vm_stop(opts.node)
    elif sys.argv[1] == "status":
        vm_status(opts.node)
    elif sys.argv[1] == "restart":
        vm_restart(opts.node)
    else:
        vm_help()
